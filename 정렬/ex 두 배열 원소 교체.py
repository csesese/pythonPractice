# 동빈이는 두개의 배열 A와 B를 가지고 있습니다. 두배열은 N개의 운소로 구성되어 있으며, 배열의 원소는 모두 자연수 입니다
# 동빈이는 최대 K 번의 바꿔치기 연산을 수행할 수 있는데, 바꿔치기 연산이란 배열A 에 있는 원소 하나와 배열 B 에 있는 원소 하나를 골라서 두 원소를 서로 바꾸는 것을 말합니다.
# 동빈이의 최종 목표는 배열 A 의 모든 원소의 합이 최대가 되도록 하는 것이다
# N,K 그리고 배열 A 와 B 이 정보가 주어졌을 때 , 최대 K 버닁 바꿔치기 연산을 수행하여 만들 수 있는 배열A 의 모든 원소의 합의 최댓값을 출력하시오

# SOLUTION
# 1. A배열은 오름차순 정렬 하고 B배열은 내림차순으로 정렬
# 2. 두 배열의 원소를 첫 번째 인덱스부터 차례로 확인하면서 A의 원소가 B의 원소보다 작을 때에만 교체하여 수행

n,k = map(int, input().split())
a=list(map(int,input().split()))
b=list(map(int,input().split()))

a.sort() #a배열 오름차순
b.sort(reverse=True) #b배열 내림차순
#첫 번째 인덱스부터 확인하며, 두 배열의 원소를 최대k 번 비교
for i in range(k):
    # A 의 원소가 B의 원소보다 작은 경우
    if a[i] < b[i]:
        # 두 원소를 교체
        a[i],b[i]=b[i],a[i]
    else :
        break
print(sum(a))